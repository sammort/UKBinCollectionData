{"uid":"e4b36752e44724c9","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1706058918508,"stop":1706058918585,"duration":77},"status":"failed","statusMessage":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"fixturefunc = <function scrape_step at 0x7f78e0be3370>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f78e0721750>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7f78dffe9660>\npage = ''\nkwargs = {'headless': True, 'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, ...}\ndriver = None, data = {'bins': []}, user_paon = 'Raf Coningsby'\nuser_postcode = 'LN4 4SY', web_driver = None, headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            # Create Selenium webdriver\n>           driver = create_webdriver(web_driver, headless)\nE           TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:30: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"fixturefunc = <function scrape_step at 0x7f78e0be3370>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f78e0721750>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7f78dffe9660>\npage = ''\nkwargs = {'headless': True, 'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, ...}\ndriver = None, data = {'bins': []}, user_paon = 'Raf Coningsby'\nuser_postcode = 'LN4 4SY', web_driver = None, headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            # Create Selenium webdriver\n>           driver = create_webdriver(web_driver, headless)\nE           TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:30: TypeError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1706058918508,"stop":1706058918509,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1706058918509,"stop":1706058918585,"duration":76},"status":"failed","statusMessage":"create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az840-296"},{"name":"thread","value":"2764-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":13,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":13},"items":[{"uid":"5d2722566b1e79a4","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/13//#testresult/5d2722566b1e79a4","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705972562284,"stop":1705972562540,"duration":256}},{"uid":"ea931eeb52aa2840","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/12//#testresult/ea931eeb52aa2840","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705886252580,"stop":1705886252796,"duration":216}},{"uid":"ab52810bbcea62ae","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/11//#testresult/ab52810bbcea62ae","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705799980247,"stop":1705799980324,"duration":77}},{"uid":"42f9d8f1ae0a3f7b","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/10//#testresult/42f9d8f1ae0a3f7b","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705713190567,"stop":1705713190625,"duration":58}},{"uid":"c210199d06ab3499","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/9//#testresult/c210199d06ab3499","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705626883584,"stop":1705626883653,"duration":69}},{"uid":"a29f7daa128629c7","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/8//#testresult/a29f7daa128629c7","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705540426460,"stop":1705540426537,"duration":77}},{"uid":"1ba35e42e5763c6a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/7//#testresult/1ba35e42e5763c6a","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705454074584,"stop":1705454074793,"duration":209}},{"uid":"40e8087381837250","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/6//#testresult/40e8087381837250","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705367638313,"stop":1705367638374,"duration":61}},{"uid":"36f0361c9bf3f4f2","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/5//#testresult/36f0361c9bf3f4f2","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705281377927,"stop":1705281378007,"duration":80}},{"uid":"e2497c8cbaeacbca","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/4//#testresult/e2497c8cbaeacbca","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705195166419,"stop":1705195166485,"duration":66}},{"uid":"a2e70a6a5d6021f3","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/3//#testresult/a2e70a6a5d6021f3","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705108407739,"stop":1705108407959,"duration":220}},{"uid":"751259cf1e5b7adb","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/2//#testresult/751259cf1e5b7adb","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705022078566,"stop":1705022078727,"duration":161}}]},"tags":[]},"source":"e4b36752e44724c9.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}