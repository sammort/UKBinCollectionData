{"uid":"31f09a9c7fef856c","name":"Validate Council Output [ReadingBoroughCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"7fabea5e392292423f65daf6696a21a8","time":{"start":1706058943967,"stop":1706058944546,"duration":579},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f78e0be3370>\nrequest = <FixtureRequest for <Function test_scenario_outline[ReadingBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f78dff6e2c0>, 'council': 'ReadingBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ReadingBoroughCouncil.py:13: in parse_data\n    json_result = json.loads(page.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f78f436e740>\ns = '<html>\\n  <head>\\n    <title>Internal Server Error</title>\\n  </head>\\n  <body>\\n    <h1><p>Internal Server Error</p></h1>\\n    \\n  </body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f78e0be3370>\nrequest = <FixtureRequest for <Function test_scenario_outline[ReadingBoroughCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f78dff6e2c0>, 'council': 'ReadingBoroughCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:66: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/ReadingBoroughCouncil.py:13: in parse_data\n    json_result = json.loads(page.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f78f436e740>\ns = '<html>\\n  <head>\\n    <title>Internal Server Error</title>\\n  </head>\\n  <body>\\n    <h1><p>Internal Server Error</p></h1>\\n    \\n  </body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: ReadingBoroughCouncil","time":{"start":1706058943967,"stop":1706058943967,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from ReadingBoroughCouncil using None and the None is set","time":{"start":1706058943967,"stop":1706058944546,"duration":579},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az840-296"},{"name":"thread","value":"2764-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"ReadingBoroughCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":12,"unknown":0,"total":13},"items":[{"uid":"f1c9889f442b72eb","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/13//#testresult/f1c9889f442b72eb","status":"passed","time":{"start":1705972594497,"stop":1705972595249,"duration":752}},{"uid":"b17fcaf7fe685331","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/12//#testresult/b17fcaf7fe685331","status":"passed","time":{"start":1705886275833,"stop":1705886276549,"duration":716}},{"uid":"a895686b27bb1aaa","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/11//#testresult/a895686b27bb1aaa","status":"passed","time":{"start":1705799996292,"stop":1705799996878,"duration":586}},{"uid":"c999b39cb40ec82a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/10//#testresult/c999b39cb40ec82a","status":"passed","time":{"start":1705713220840,"stop":1705713221305,"duration":465}},{"uid":"c4155b53d43a41b6","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/9//#testresult/c4155b53d43a41b6","status":"passed","time":{"start":1705626939475,"stop":1705626939983,"duration":508}},{"uid":"9990dc348b4beb33","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/8//#testresult/9990dc348b4beb33","status":"passed","time":{"start":1705540541706,"stop":1705540542216,"duration":510}},{"uid":"76f7b7bca77305af","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/7//#testresult/76f7b7bca77305af","status":"passed","time":{"start":1705454132486,"stop":1705454133324,"duration":838}},{"uid":"c9b35f70e0ca6fe5","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/6//#testresult/c9b35f70e0ca6fe5","status":"passed","time":{"start":1705367658131,"stop":1705367658616,"duration":485}},{"uid":"1749a6b9aeecc4a5","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/5//#testresult/1749a6b9aeecc4a5","status":"passed","time":{"start":1705281403842,"stop":1705281404342,"duration":500}},{"uid":"c4c006825256aed7","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/4//#testresult/c4c006825256aed7","status":"passed","time":{"start":1705195190613,"stop":1705195191634,"duration":1021}},{"uid":"16a4b104bf1a6ad6","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/3//#testresult/16a4b104bf1a6ad6","status":"passed","time":{"start":1705108432499,"stop":1705108433242,"duration":743}},{"uid":"51e4c0e15e6847e4","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/2//#testresult/51e4c0e15e6847e4","status":"passed","time":{"start":1705022106657,"stop":1705022107169,"duration":512}}]},"tags":[]},"source":"31f09a9c7fef856c.json","parameterValues":["ReadingBoroughCouncil","None","None"]}