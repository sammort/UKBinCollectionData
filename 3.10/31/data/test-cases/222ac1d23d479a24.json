{"uid":"222ac1d23d479a24","name":"Validate Council Output [BarnetCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc586f88bb959e318f31a1e5c380b8cb","time":{"start":1707527169406,"stop":1707527169467,"duration":61},"status":"failed","statusMessage":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"fixturefunc = <function scrape_step at 0x7f8e1013ee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8e22e46200>, 'council': 'BarnetCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BarnetCouncil.CouncilClass object at 0x7f8e100a8910>, page = ''\nkwargs = {'headless': True, 'paon': 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', 'postcode': 'HA8 7NA', 'uprn': None, ...}\ndriver = None, user_postcode = 'HA8 7NA'\nuser_paon = 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', headless = True\nweb_driver = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            user_postcode = kwargs.get(\"postcode\")\n            if not user_postcode:\n                raise ValueError(\"No postcode provided.\")\n            check_postcode(user_postcode)\n    \n            user_paon = kwargs.get(\"paon\")\n            check_paon(user_paon)\n            headless = kwargs.get(\"headless\")\n            web_driver = kwargs.get(\"web_driver\")\n>           driver = create_webdriver(web_driver, headless)\nE           TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:77: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"fixturefunc = <function scrape_step at 0x7f8e1013ee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8e22e46200>, 'council': 'BarnetCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BarnetCouncil.CouncilClass object at 0x7f8e100a8910>, page = ''\nkwargs = {'headless': True, 'paon': 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', 'postcode': 'HA8 7NA', 'uprn': None, ...}\ndriver = None, user_postcode = 'HA8 7NA'\nuser_paon = 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', headless = True\nweb_driver = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            user_postcode = kwargs.get(\"postcode\")\n            if not user_postcode:\n                raise ValueError(\"No postcode provided.\")\n            check_postcode(user_postcode)\n    \n            user_paon = kwargs.get(\"paon\")\n            check_paon(user_paon)\n            headless = kwargs.get(\"headless\")\n            web_driver = kwargs.get(\"web_driver\")\n>           driver = create_webdriver(web_driver, headless)\nE           TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:77: TypeError","steps":[{"name":"Given the council: BarnetCouncil","time":{"start":1707527169406,"stop":1707527169407,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BarnetCouncil using local and the http://selenium:4444 is set","time":{"start":1707527169407,"stop":1707527169467,"duration":60},"status":"failed","statusMessage":"create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1020-365"},{"name":"thread","value":"2764-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BarnetCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":30,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":30},"items":[{"uid":"6a0330dc08f4e4b9","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/30//#testresult/6a0330dc08f4e4b9","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707440839092,"stop":1707440839247,"duration":155}},{"uid":"b9f95ab1e419e309","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/29//#testresult/b9f95ab1e419e309","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707354438638,"stop":1707354438849,"duration":211}},{"uid":"c3850da40b0e0793","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/28//#testresult/c3850da40b0e0793","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707267981286,"stop":1707267981439,"duration":153}},{"uid":"c1266016fd8bfc14","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/27//#testresult/c1266016fd8bfc14","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707181702616,"stop":1707181702816,"duration":200}},{"uid":"e1d25c5b82177d19","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/26//#testresult/e1d25c5b82177d19","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707095422306,"stop":1707095422462,"duration":156}},{"uid":"cd2bd28635a49440","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/25//#testresult/cd2bd28635a49440","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707009181942,"stop":1707009182551,"duration":609}},{"uid":"fa9c4f83da8e78aa","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/24//#testresult/fa9c4f83da8e78aa","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706922422150,"stop":1706922422307,"duration":157}},{"uid":"f118ac93c2fa5785","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/23//#testresult/f118ac93c2fa5785","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706836104170,"stop":1706836104328,"duration":158}},{"uid":"63f7963b2f3d04aa","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/22//#testresult/63f7963b2f3d04aa","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706749940083,"stop":1706749940294,"duration":211}},{"uid":"273edae9482033dc","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/21//#testresult/273edae9482033dc","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706663314276,"stop":1706663314437,"duration":161}},{"uid":"7e6f40236405a0b7","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/20//#testresult/7e6f40236405a0b7","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706576986860,"stop":1706576986929,"duration":69}},{"uid":"6cb2afe70257347","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/19//#testresult/6cb2afe70257347","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706490528733,"stop":1706490528875,"duration":142}},{"uid":"ce18567ba47fb62e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/18//#testresult/ce18567ba47fb62e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706404396715,"stop":1706404397340,"duration":625}},{"uid":"a6102d9344e9fb86","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/17//#testresult/a6102d9344e9fb86","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706317648385,"stop":1706317648548,"duration":163}},{"uid":"ff8e6bc6e5b25c3e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/16//#testresult/ff8e6bc6e5b25c3e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706231407328,"stop":1706231407493,"duration":165}},{"uid":"7e726ef55d83e0c0","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/15//#testresult/7e726ef55d83e0c0","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706145324973,"stop":1706145325135,"duration":162}},{"uid":"e9d179bf3a335634","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/14//#testresult/e9d179bf3a335634","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706058908526,"stop":1706058908593,"duration":67}},{"uid":"bfb187f5e9af206f","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/13//#testresult/bfb187f5e9af206f","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705972550353,"stop":1705972550584,"duration":231}},{"uid":"6918aee5af1873bb","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/12//#testresult/6918aee5af1873bb","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705886237465,"stop":1705886237689,"duration":224}},{"uid":"5ce66355526ca787","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/11//#testresult/5ce66355526ca787","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705799965905,"stop":1705799965978,"duration":73}}]},"tags":[]},"source":"222ac1d23d479a24.json","parameterValues":["BarnetCouncil","local","http://selenium:4444"]}