{"uid":"18bb15c56913d27","name":"Validate Council Output [TorbayCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5195ebd313dac644e0a1a0a50e7ce809","time":{"start":1707527256764,"stop":1707527317539,"duration":60775},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f8e1013ee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorbayCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8e0f12f730>, 'council': 'TorbayCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <TorbayCouncil.CouncilClass object at 0x7f8e0eee7dc0>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10024000295', ...}\nuprn = '10024000295'\nheaders = {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate, br', 'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8', 'Connection': 'keep-alive', ...}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Encoding\": \"gzip, deflate, br\",\n            \"Accept-Language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\n            \"Connection\": \"keep-alive\",\n            \"Host\": \"online.torbay.gov.uk\",\n            \"Origin\": \"https://www.torbay.gov.uk\",\n            \"Referer\": \"https://www.torbay.gov.uk/\",\n            \"sec-ch-ua\": '\"Chromium\";v=\"110\", \"Not A(Brand\";v=\"24\", \"Google Chrome\";v=\"110\"',\n            \"sec-ch-ua-mobile\": \"?0\",\n            \"sec-ch-ua-platform\": '\"Windows\"',\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"same-site\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36\",\n        }\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://online.torbay.gov.uk/services.bartec/collections?uprn={uprn}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/TorbayCouncil.py:38: ValueError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f8e1013ee60>\nrequest = <FixtureRequest for <Function test_scenario_outline[TorbayCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f8e0f12f730>, 'council': 'TorbayCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <TorbayCouncil.CouncilClass object at 0x7f8e0eee7dc0>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '10024000295', ...}\nuprn = '10024000295'\nheaders = {'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate, br', 'Accept-Language': 'en-GB,en-US;q=0.9,en;q=0.8', 'Connection': 'keep-alive', ...}\nresponse = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        headers = {\n            \"Accept\": \"*/*\",\n            \"Accept-Encoding\": \"gzip, deflate, br\",\n            \"Accept-Language\": \"en-GB,en-US;q=0.9,en;q=0.8\",\n            \"Connection\": \"keep-alive\",\n            \"Host\": \"online.torbay.gov.uk\",\n            \"Origin\": \"https://www.torbay.gov.uk\",\n            \"Referer\": \"https://www.torbay.gov.uk/\",\n            \"sec-ch-ua\": '\"Chromium\";v=\"110\", \"Not A(Brand\";v=\"24\", \"Google Chrome\";v=\"110\"',\n            \"sec-ch-ua-mobile\": \"?0\",\n            \"sec-ch-ua-platform\": '\"Windows\"',\n            \"Sec-Fetch-Dest\": \"empty\",\n            \"Sec-Fetch-Mode\": \"cors\",\n            \"Sec-Fetch-Site\": \"same-site\",\n            \"User-Agent\": \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/110.0.0.0 Safari/537.36\",\n        }\n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://online.torbay.gov.uk/services.bartec/collections?uprn={uprn}\",\n            headers=headers,\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/TorbayCouncil.py:38: ValueError","steps":[{"name":"Given the council: TorbayCouncil","time":{"start":1707527256764,"stop":1707527256764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from TorbayCouncil using None and the None is set","time":{"start":1707527256765,"stop":1707527317539,"duration":60774},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1020-365"},{"name":"thread","value":"2764-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"TorbayCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":5,"broken":0,"skipped":0,"passed":25,"unknown":0,"total":30},"items":[{"uid":"9ee6533dcd51da3f","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/30//#testresult/9ee6533dcd51da3f","status":"passed","time":{"start":1707440912981,"stop":1707440915782,"duration":2801}},{"uid":"82499762bcc6f335","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/29//#testresult/82499762bcc6f335","status":"passed","time":{"start":1707354504655,"stop":1707354510126,"duration":5471}},{"uid":"9bfbcd6cc22cca13","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/28//#testresult/9bfbcd6cc22cca13","status":"passed","time":{"start":1707268166532,"stop":1707268168595,"duration":2063}},{"uid":"5f43e0e912f6d6d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/27//#testresult/5f43e0e912f6d6d","status":"passed","time":{"start":1707181751713,"stop":1707181753791,"duration":2078}},{"uid":"d7849f6053ce7c9d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/26//#testresult/d7849f6053ce7c9d","status":"passed","time":{"start":1707095598884,"stop":1707095600234,"duration":1350}},{"uid":"3326636c66379032","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/25//#testresult/3326636c66379032","status":"passed","time":{"start":1707009266354,"stop":1707009278159,"duration":11805}},{"uid":"28a6497c5e4c85fc","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/24//#testresult/28a6497c5e4c85fc","status":"passed","time":{"start":1706922507276,"stop":1706922518782,"duration":11506}},{"uid":"ba9dc7cba7a9e120","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/23//#testresult/ba9dc7cba7a9e120","status":"passed","time":{"start":1706836153968,"stop":1706836157237,"duration":3269}},{"uid":"acdcdde2f6885953","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/22//#testresult/acdcdde2f6885953","status":"passed","time":{"start":1706750002482,"stop":1706750004219,"duration":1737}},{"uid":"b0acd3b0d7608493","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/21//#testresult/b0acd3b0d7608493","status":"passed","time":{"start":1706663392449,"stop":1706663395700,"duration":3251}},{"uid":"47a5464181d80507","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/20//#testresult/47a5464181d80507","status":"passed","time":{"start":1706576961622,"stop":1706576972836,"duration":11214}},{"uid":"26374e6b5e4524a8","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/19//#testresult/26374e6b5e4524a8","status":"passed","time":{"start":1706490577582,"stop":1706490579839,"duration":2257}},{"uid":"c59256c00dd6a045","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/18//#testresult/c59256c00dd6a045","status":"passed","time":{"start":1706404484726,"stop":1706404487252,"duration":2526}},{"uid":"26aa40ef9b050d5c","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/17//#testresult/26aa40ef9b050d5c","status":"passed","time":{"start":1706317720295,"stop":1706317728866,"duration":8571}},{"uid":"4bab69cf830998b8","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/16//#testresult/4bab69cf830998b8","status":"passed","time":{"start":1706231468289,"stop":1706231470912,"duration":2623}},{"uid":"2f76adcc646e8db4","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/15//#testresult/2f76adcc646e8db4","status":"passed","time":{"start":1706145379859,"stop":1706145383107,"duration":3248}},{"uid":"edbaaeab6e09188f","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/14//#testresult/edbaaeab6e09188f","status":"passed","time":{"start":1706059090097,"stop":1706059091579,"duration":1482}},{"uid":"c79fd9f1146435f0","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/13//#testresult/c79fd9f1146435f0","status":"passed","time":{"start":1705972743844,"stop":1705972745995,"duration":2151}},{"uid":"dcd268496c9bafec","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/12//#testresult/dcd268496c9bafec","status":"passed","time":{"start":1705886293421,"stop":1705886295027,"duration":1606}},{"uid":"6a5be49974005f1f","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/11//#testresult/6a5be49974005f1f","status":"passed","time":{"start":1705800008239,"stop":1705800009452,"duration":1213}}]},"tags":[]},"source":"18bb15c56913d27.json","parameterValues":["TorbayCouncil","None","None"]}