{"uid":"ec9b4c8157f6630e","name":"Validate Council Output [YorkCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5fed61e89778a9cbbd6ff59686ec6418","time":{"start":1706577014691,"stop":1706577015106,"duration":415},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7faa2c01b1c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[YorkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faa2ad231c0>, 'council': 'YorkCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/YorkCouncil.py:26: in parse_data\n    json_response = json.loads(response.content)[\"services\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7faa3f78a6e0>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7faa2c01b1c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[YorkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7faa2ad231c0>, 'council': 'YorkCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/YorkCouncil.py:26: in parse_data\n    json_response = json.loads(response.content)[\"services\"]\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7faa3f78a6e0>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: YorkCouncil","time":{"start":1706577014692,"stop":1706577014692,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from YorkCouncil using None and the None is set","time":{"start":1706577014692,"stop":1706577015106,"duration":414},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1433-899"},{"name":"thread","value":"2762-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"YorkCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":19},"items":[{"uid":"e10a4d5bda029c39","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/19//#testresult/e10a4d5bda029c39","status":"passed","time":{"start":1706490593873,"stop":1706490594380,"duration":507}},{"uid":"a83a0f7d6a48328c","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/18//#testresult/a83a0f7d6a48328c","status":"passed","time":{"start":1706404495228,"stop":1706404496069,"duration":841}},{"uid":"39a854b8fb99d9ca","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/17//#testresult/39a854b8fb99d9ca","status":"passed","time":{"start":1706317736641,"stop":1706317737233,"duration":592}},{"uid":"8318215e6be6798f","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/16//#testresult/8318215e6be6798f","status":"passed","time":{"start":1706231472794,"stop":1706231473426,"duration":632}},{"uid":"5ec496e4f87cee61","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/15//#testresult/5ec496e4f87cee61","status":"passed","time":{"start":1706145394832,"stop":1706145395432,"duration":600}},{"uid":"81d7cc093e125ebd","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/14//#testresult/81d7cc093e125ebd","status":"passed","time":{"start":1706058984931,"stop":1706058985545,"duration":614}},{"uid":"e39d59bc92590716","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/13//#testresult/e39d59bc92590716","status":"passed","time":{"start":1705972641954,"stop":1705972642791,"duration":837}},{"uid":"61b46df87654620a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/12//#testresult/61b46df87654620a","status":"passed","time":{"start":1705886319908,"stop":1705886320744,"duration":836}},{"uid":"a06d709b4d85d5c1","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/11//#testresult/a06d709b4d85d5c1","status":"passed","time":{"start":1705800019705,"stop":1705800020220,"duration":515}},{"uid":"391a88effcc43d9d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/10//#testresult/391a88effcc43d9d","status":"passed","time":{"start":1705713267624,"stop":1705713268138,"duration":514}},{"uid":"2b28253f2c108968","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/9//#testresult/2b28253f2c108968","status":"passed","time":{"start":1705626944470,"stop":1705626944981,"duration":511}},{"uid":"c74aa7e703b8c33f","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/8//#testresult/c74aa7e703b8c33f","status":"passed","time":{"start":1705540495647,"stop":1705540496172,"duration":525}},{"uid":"15d2505db5685bc7","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/7//#testresult/15d2505db5685bc7","status":"passed","time":{"start":1705454143088,"stop":1705454143926,"duration":838}},{"uid":"fed663e399bf8716","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/6//#testresult/fed663e399bf8716","status":"passed","time":{"start":1705367712142,"stop":1705367712649,"duration":507}},{"uid":"4d1fbec68a523f16","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/5//#testresult/4d1fbec68a523f16","status":"passed","time":{"start":1705281430814,"stop":1705281431327,"duration":513}},{"uid":"3ebda6f083ce3b93","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/4//#testresult/3ebda6f083ce3b93","status":"passed","time":{"start":1705195224078,"stop":1705195224913,"duration":835}},{"uid":"711d4e5f3478eba7","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/3//#testresult/711d4e5f3478eba7","status":"passed","time":{"start":1705108520120,"stop":1705108520946,"duration":826}},{"uid":"755c2ed37da43d85","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/2//#testresult/755c2ed37da43d85","status":"passed","time":{"start":1705022143807,"stop":1705022144328,"duration":521}}]},"tags":[]},"source":"ec9b4c8157f6630e.json","parameterValues":["YorkCouncil","None","None"]}