{"uid":"a019dfed220fb3df","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1706922458764,"stop":1706922489507,"duration":30743},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fec0d567760>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fec0c24fac0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fec20c866e0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fec0d567760>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fec0c24fac0>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.10/lib/python3.10/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fec20c866e0>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1706922458764,"stop":1706922458764,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1706922458764,"stop":1706922489506,"duration":30742},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1020-451"},{"name":"thread","value":"2809-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":22,"unknown":0,"total":23},"items":[{"uid":"7a32abc6c3276232","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/23//#testresult/7a32abc6c3276232","status":"passed","time":{"start":1706836130460,"stop":1706836132447,"duration":1987}},{"uid":"201ab58dd9fe9b62","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/22//#testresult/201ab58dd9fe9b62","status":"passed","time":{"start":1706749967894,"stop":1706749969211,"duration":1317}},{"uid":"c8a44672a1321bf5","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/21//#testresult/c8a44672a1321bf5","status":"passed","time":{"start":1706663346808,"stop":1706663352369,"duration":5561}},{"uid":"b8010c354f3a3c83","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/20//#testresult/b8010c354f3a3c83","status":"passed","time":{"start":1706576941660,"stop":1706576942706,"duration":1046}},{"uid":"b3a065919ec8d43d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/19//#testresult/b3a065919ec8d43d","status":"passed","time":{"start":1706490556847,"stop":1706490557823,"duration":976}},{"uid":"a78ef3f40e11a05","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/18//#testresult/a78ef3f40e11a05","status":"passed","time":{"start":1706404452872,"stop":1706404453853,"duration":981}},{"uid":"e69d7c9da9925e0d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/17//#testresult/e69d7c9da9925e0d","status":"passed","time":{"start":1706317680450,"stop":1706317706911,"duration":26461}},{"uid":"3ffb18c85f947e06","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/16//#testresult/3ffb18c85f947e06","status":"passed","time":{"start":1706231432021,"stop":1706231432730,"duration":709}},{"uid":"4bfc81b3786b8038","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/15//#testresult/4bfc81b3786b8038","status":"passed","time":{"start":1706145357795,"stop":1706145361107,"duration":3312}},{"uid":"357720bab0ec64b","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/14//#testresult/357720bab0ec64b","status":"passed","time":{"start":1706058930974,"stop":1706058931923,"duration":949}},{"uid":"5b5b773a122b970a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/13//#testresult/5b5b773a122b970a","status":"passed","time":{"start":1705972621533,"stop":1705972622481,"duration":948}},{"uid":"f32ee511ba4d7076","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/12//#testresult/f32ee511ba4d7076","status":"passed","time":{"start":1705886267302,"stop":1705886268301,"duration":999}},{"uid":"e36bf162e4a8e0de","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/11//#testresult/e36bf162e4a8e0de","status":"passed","time":{"start":1705799990960,"stop":1705799991899,"duration":939}},{"uid":"1a4eb116ab8dfbbc","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/10//#testresult/1a4eb116ab8dfbbc","status":"passed","time":{"start":1705713216026,"stop":1705713217674,"duration":1648}},{"uid":"67863b2b5dab6054","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/9//#testresult/67863b2b5dab6054","status":"passed","time":{"start":1705626901769,"stop":1705626902443,"duration":674}},{"uid":"426d16403fa3f5d0","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/8//#testresult/426d16403fa3f5d0","status":"passed","time":{"start":1705540443790,"stop":1705540445190,"duration":1400}},{"uid":"9d584cb0d8663b02","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/7//#testresult/9d584cb0d8663b02","status":"passed","time":{"start":1705454092165,"stop":1705454093349,"duration":1184}},{"uid":"89a816881e0e60ec","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/6//#testresult/89a816881e0e60ec","status":"passed","time":{"start":1705367655365,"stop":1705367656071,"duration":706}},{"uid":"803a42ae8e12f781","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/5//#testresult/803a42ae8e12f781","status":"passed","time":{"start":1705281393120,"stop":1705281394053,"duration":933}},{"uid":"60d0ce120e81f567","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.10/4//#testresult/60d0ce120e81f567","status":"passed","time":{"start":1705195187526,"stop":1705195188739,"duration":1213}}]},"tags":[]},"source":"a019dfed220fb3df.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}