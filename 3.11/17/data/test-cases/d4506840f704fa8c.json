{"uid":"d4506840f704fa8c","name":"Validate Council Output [NorthNorthamptonshireCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"2f4dcb7344da1ca9918ae67a15191b0c","time":{"start":1706317682674,"stop":1706317713366,"duration":30692},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fdeafbf4d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fdeaef7f710>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fdec3b9e210>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7fdeafbf4d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[NorthNorthamptonshireCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fdeaef7f710>, 'council': 'NorthNorthamptonshireCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/NorthNorthamptonshireCouncil.py:41: in parse_data\n    json_response = json.loads(response.text)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7fdec3b9e210>, s = '', idx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: NorthNorthamptonshireCouncil","time":{"start":1706317682675,"stop":1706317682675,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from NorthNorthamptonshireCouncil using None and the None is set","time":{"start":1706317682675,"stop":1706317713366,"duration":30691},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1530-620"},{"name":"thread","value":"2723-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"NorthNorthamptonshireCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":15,"unknown":0,"total":16},"items":[{"uid":"61f4f85bf693a374","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/16//#testresult/61f4f85bf693a374","status":"passed","time":{"start":1706231419394,"stop":1706231420324,"duration":930}},{"uid":"46c94709845798e0","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/15//#testresult/46c94709845798e0","status":"passed","time":{"start":1706145369501,"stop":1706145370501,"duration":1000}},{"uid":"2f2e396ae3774924","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/14//#testresult/2f2e396ae3774924","status":"passed","time":{"start":1706058933875,"stop":1706058934508,"duration":633}},{"uid":"7ebe4199d5d3997","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/13//#testresult/7ebe4199d5d3997","status":"passed","time":{"start":1705972588981,"stop":1705972590050,"duration":1069}},{"uid":"45e87b17d74d8e95","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/12//#testresult/45e87b17d74d8e95","status":"passed","time":{"start":1705886250439,"stop":1705886251133,"duration":694}},{"uid":"13e3b80e5556430","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/11//#testresult/13e3b80e5556430","status":"passed","time":{"start":1705799985905,"stop":1705799986988,"duration":1083}},{"uid":"489624ba92af1cba","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/10//#testresult/489624ba92af1cba","status":"passed","time":{"start":1705713225778,"stop":1705713226542,"duration":764}},{"uid":"af819e29de4864fb","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/9//#testresult/af819e29de4864fb","status":"passed","time":{"start":1705626922770,"stop":1705626923418,"duration":648}},{"uid":"a9735666544b3c99","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/8//#testresult/a9735666544b3c99","status":"passed","time":{"start":1705540445303,"stop":1705540446006,"duration":703}},{"uid":"8f7719c9bfb64a3a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/7//#testresult/8f7719c9bfb64a3a","status":"passed","time":{"start":1705454094819,"stop":1705454095796,"duration":977}},{"uid":"b01f7df30c45240d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/6//#testresult/b01f7df30c45240d","status":"passed","time":{"start":1705367662198,"stop":1705367663175,"duration":977}},{"uid":"f4e9cc2acf7c349","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/5//#testresult/f4e9cc2acf7c349","status":"passed","time":{"start":1705281394229,"stop":1705281394966,"duration":737}},{"uid":"ca2dbe831d6c7547","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/4//#testresult/ca2dbe831d6c7547","status":"passed","time":{"start":1705195170895,"stop":1705195173398,"duration":2503}},{"uid":"2bc4a7cf4edc4e93","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/3//#testresult/2bc4a7cf4edc4e93","status":"passed","time":{"start":1705108432977,"stop":1705108433744,"duration":767}},{"uid":"40db0d7e7031d227","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/2//#testresult/40db0d7e7031d227","status":"passed","time":{"start":1705022095878,"stop":1705022097024,"duration":1146}}]},"tags":[]},"source":"d4506840f704fa8c.json","parameterValues":["NorthNorthamptonshireCouncil","None","None"]}