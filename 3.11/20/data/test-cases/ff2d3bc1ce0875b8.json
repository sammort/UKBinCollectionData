{"uid":"ff2d3bc1ce0875b8","name":"Validate Council Output [YorkCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"5fed61e89778a9cbbd6ff59686ec6418","time":{"start":1706576998479,"stop":1706576999159,"duration":680},"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f390ffc0860>\nrequest = <FixtureRequest for <Function test_scenario_outline[YorkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f390efa3490>, 'council': 'YorkCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/YorkCouncil.py:26: in parse_data\n    json_response = json.loads(response.content)[\"services\"]\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f391fb54790>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"fixturefunc = <function scrape_step at 0x7f390ffc0860>\nrequest = <FixtureRequest for <Function test_scenario_outline[YorkCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f390efa3490>, 'council': 'YorkCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\nuk_bin_collection/uk_bin_collection/councils/YorkCouncil.py:26: in parse_data\n    json_response = json.loads(response.content)[\"services\"]\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x7f391fb54790>\ns = '<!DOCTYPE html>\\n<!--[if lt IE 7]> <html class=\"no-js ie6 oldie\" lang=\"en-US\"> <![endif]-->\\n<!--[if IE 7]>    <html ...istener(\"DOMContentLoaded\",d)})();</script>\\n</div><!-- /.error-footer -->\\n\\n\\n    </div>\\n</div>\\n</body>\\n</html>\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/opt/hostedtoolcache/Python/3.11.7/x64/lib/python3.11/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Given the council: YorkCouncil","time":{"start":1706576998479,"stop":1706576998479,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from YorkCouncil using None and the None is set","time":{"start":1706576998479,"stop":1706576999159,"duration":680},"status":"failed","statusMessage":"Expecting value: line 1 column 1 (char 0)","statusTrace":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az695-903"},{"name":"thread","value":"2735-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"YorkCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":18,"unknown":0,"total":19},"items":[{"uid":"3cb1d365ad044812","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/19//#testresult/3cb1d365ad044812","status":"passed","time":{"start":1706490594620,"stop":1706490595123,"duration":503}},{"uid":"8084f328a67e3c26","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/18//#testresult/8084f328a67e3c26","status":"passed","time":{"start":1706404488719,"stop":1706404489323,"duration":604}},{"uid":"2c98b99701ff9e56","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/17//#testresult/2c98b99701ff9e56","status":"passed","time":{"start":1706317733649,"stop":1706317734294,"duration":645}},{"uid":"a597e40872dbe920","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/16//#testresult/a597e40872dbe920","status":"passed","time":{"start":1706231458641,"stop":1706231459184,"duration":543}},{"uid":"784cc6f1fddfdfa9","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/15//#testresult/784cc6f1fddfdfa9","status":"passed","time":{"start":1706145396622,"stop":1706145397480,"duration":858}},{"uid":"e9240f5f5ddfe715","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/14//#testresult/e9240f5f5ddfe715","status":"passed","time":{"start":1706058974642,"stop":1706058975155,"duration":513}},{"uid":"e0d96e0bb311e5bf","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/13//#testresult/e0d96e0bb311e5bf","status":"passed","time":{"start":1705972642998,"stop":1705972643884,"duration":886}},{"uid":"54dec1d017736d40","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/12//#testresult/54dec1d017736d40","status":"passed","time":{"start":1705886315901,"stop":1705886316403,"duration":502}},{"uid":"9dffbcbd14df19ef","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/11//#testresult/9dffbcbd14df19ef","status":"passed","time":{"start":1705800012530,"stop":1705800013023,"duration":493}},{"uid":"24b2bf7ed6a8679e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/10//#testresult/24b2bf7ed6a8679e","status":"passed","time":{"start":1705713268094,"stop":1705713268598,"duration":504}},{"uid":"9d335548104450a8","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/9//#testresult/9d335548104450a8","status":"passed","time":{"start":1705626945635,"stop":1705626946129,"duration":494}},{"uid":"8a5e75e097506427","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/8//#testresult/8a5e75e097506427","status":"passed","time":{"start":1705540512326,"stop":1705540512850,"duration":524}},{"uid":"f616c90eb0ea42ed","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/7//#testresult/f616c90eb0ea42ed","status":"passed","time":{"start":1705454137855,"stop":1705454138689,"duration":834}},{"uid":"f3662f49f6e1b4c5","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/6//#testresult/f3662f49f6e1b4c5","status":"passed","time":{"start":1705367714501,"stop":1705367715323,"duration":822}},{"uid":"70cc0dff7587b243","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/5//#testresult/70cc0dff7587b243","status":"passed","time":{"start":1705281429234,"stop":1705281429745,"duration":511}},{"uid":"afefcdedb123e2f9","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/4//#testresult/afefcdedb123e2f9","status":"passed","time":{"start":1705195216627,"stop":1705195217126,"duration":499}},{"uid":"f697476671da81e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/3//#testresult/f697476671da81e","status":"passed","time":{"start":1705108479676,"stop":1705108480661,"duration":985}},{"uid":"336e53853fd46e83","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/2//#testresult/336e53853fd46e83","status":"passed","time":{"start":1705022155538,"stop":1705022156380,"duration":842}}]},"tags":[]},"source":"ff2d3bc1ce0875b8.json","parameterValues":["YorkCouncil","None","None"]}