{"uid":"c424cde80be76c8","name":"Validate Council Output [BuryCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"a4aaab859b0cc98805b6ab39b299e88b","time":{"start":1707009187399,"stop":1707009238674,"duration":51275},"status":"failed","statusMessage":"ConnectionAbortedError: Issue encountered getting addresses.","statusTrace":"fixturefunc = <function scrape_step at 0x7f351c0a4ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BuryCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f351b728cd0>, 'council': 'BuryCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BuryCouncil.CouncilClass object at 0x7f351b7acf90>, page = ''\nkwargs = {'headless': True, 'paon': '3', 'postcode': 'M26 3XY', 'uprn': None, ...}\ncollections = [], data = {'bins': []}, postcode = 'M26 3XY'\naddr_response = <Response [504]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        collections = []\n        data = {\"bins\": []}\n    \n        # Get and check postcode and PAON\n        postcode = kwargs.get(\"postcode\")\n        paon = kwargs.get(\"paon\")\n        check_postcode(postcode)\n        check_paon(paon)\n    \n        # Make API call to get property info using postcode\n        addr_response = requests.get(\n            f'https://www.bury.gov.uk/app-services/getProperties?postcode={postcode.replace(\" \", \"\")}'\n        )\n        if addr_response.status_code != 200:\n>           raise ConnectionAbortedError(\"Issue encountered getting addresses.\")\nE           ConnectionAbortedError: Issue encountered getting addresses.\n\nuk_bin_collection/uk_bin_collection/councils/BuryCouncil.py:30: ConnectionAbortedError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ConnectionAbortedError: Issue encountered getting addresses.","statusTrace":"fixturefunc = <function scrape_step at 0x7f351c0a4ea0>\nrequest = <FixtureRequest for <Function test_scenario_outline[BuryCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f351b728cd0>, 'council': 'BuryCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BuryCouncil.CouncilClass object at 0x7f351b7acf90>, page = ''\nkwargs = {'headless': True, 'paon': '3', 'postcode': 'M26 3XY', 'uprn': None, ...}\ncollections = [], data = {'bins': []}, postcode = 'M26 3XY'\naddr_response = <Response [504]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        # Make a BS4 object\n        collections = []\n        data = {\"bins\": []}\n    \n        # Get and check postcode and PAON\n        postcode = kwargs.get(\"postcode\")\n        paon = kwargs.get(\"paon\")\n        check_postcode(postcode)\n        check_paon(paon)\n    \n        # Make API call to get property info using postcode\n        addr_response = requests.get(\n            f'https://www.bury.gov.uk/app-services/getProperties?postcode={postcode.replace(\" \", \"\")}'\n        )\n        if addr_response.status_code != 200:\n>           raise ConnectionAbortedError(\"Issue encountered getting addresses.\")\nE           ConnectionAbortedError: Issue encountered getting addresses.\n\nuk_bin_collection/uk_bin_collection/councils/BuryCouncil.py:30: ConnectionAbortedError","steps":[{"name":"Given the council: BuryCouncil","time":{"start":1707009187399,"stop":1707009187400,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BuryCouncil using None and the None is set","time":{"start":1707009187400,"stop":1707009238674,"duration":51274},"status":"failed","statusMessage":"Issue encountered getting addresses.","statusTrace":"ConnectionAbortedError: Issue encountered getting addresses.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az695-715"},{"name":"thread","value":"2717-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BuryCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":23,"unknown":0,"total":24},"items":[{"uid":"4c3d6a081dfc4e5d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/24//#testresult/4c3d6a081dfc4e5d","status":"passed","time":{"start":1706922426035,"stop":1706922428024,"duration":1989}},{"uid":"2c015091b25417a1","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/23//#testresult/2c015091b25417a1","status":"passed","time":{"start":1706836109320,"stop":1706836110779,"duration":1459}},{"uid":"296aaaa53aaad328","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/22//#testresult/296aaaa53aaad328","status":"passed","time":{"start":1706749937537,"stop":1706749939135,"duration":1598}},{"uid":"fa65f1369b398b76","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/21//#testresult/fa65f1369b398b76","status":"passed","time":{"start":1706663324654,"stop":1706663326884,"duration":2230}},{"uid":"b6fe679d52f420ce","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/20//#testresult/b6fe679d52f420ce","status":"passed","time":{"start":1706576906395,"stop":1706576910213,"duration":3818}},{"uid":"66e31ccf3b025a56","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/19//#testresult/66e31ccf3b025a56","status":"passed","time":{"start":1706490537790,"stop":1706490539568,"duration":1778}},{"uid":"e8cdb9ca8ae7c314","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/18//#testresult/e8cdb9ca8ae7c314","status":"passed","time":{"start":1706404394076,"stop":1706404395996,"duration":1920}},{"uid":"911bead62d79feb5","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/17//#testresult/911bead62d79feb5","status":"passed","time":{"start":1706317654692,"stop":1706317656504,"duration":1812}},{"uid":"2a18915adf259800","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/16//#testresult/2a18915adf259800","status":"passed","time":{"start":1706231399455,"stop":1706231400993,"duration":1538}},{"uid":"7b53d9431cd7a73d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/15//#testresult/7b53d9431cd7a73d","status":"passed","time":{"start":1706145337000,"stop":1706145339220,"duration":2220}},{"uid":"5833de385a955096","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/14//#testresult/5833de385a955096","status":"passed","time":{"start":1706058915922,"stop":1706058917449,"duration":1527}},{"uid":"941112f51cb1ac94","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/13//#testresult/941112f51cb1ac94","status":"passed","time":{"start":1705972565058,"stop":1705972567529,"duration":2471}},{"uid":"578da8007cf5a476","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/12//#testresult/578da8007cf5a476","status":"passed","time":{"start":1705886229010,"stop":1705886230676,"duration":1666}},{"uid":"8942ed1cc432c326","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/11//#testresult/8942ed1cc432c326","status":"passed","time":{"start":1705799969479,"stop":1705799971481,"duration":2002}},{"uid":"3e7a2e088c105afb","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/10//#testresult/3e7a2e088c105afb","status":"passed","time":{"start":1705713192184,"stop":1705713193775,"duration":1591}},{"uid":"8195a5cf1e21919","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/9//#testresult/8195a5cf1e21919","status":"passed","time":{"start":1705626892420,"stop":1705626894284,"duration":1864}},{"uid":"bce0c6a82324b313","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/8//#testresult/bce0c6a82324b313","status":"passed","time":{"start":1705540423498,"stop":1705540425649,"duration":2151}},{"uid":"5fee0429d33c0028","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/7//#testresult/5fee0429d33c0028","status":"passed","time":{"start":1705454072190,"stop":1705454074656,"duration":2466}},{"uid":"1928e3850d224e6c","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/6//#testresult/1928e3850d224e6c","status":"passed","time":{"start":1705367645633,"stop":1705367648256,"duration":2623}},{"uid":"bad529824256f87a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/5//#testresult/bad529824256f87a","status":"passed","time":{"start":1705281375459,"stop":1705281377239,"duration":1780}}]},"tags":[]},"source":"c424cde80be76c8.json","parameterValues":["BuryCouncil","None","None"]}