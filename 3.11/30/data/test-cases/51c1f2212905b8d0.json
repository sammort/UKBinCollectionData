{"uid":"51c1f2212905b8d0","name":"Validate Council Output [BarnetCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"cc586f88bb959e318f31a1e5c380b8cb","time":{"start":1707440841257,"stop":1707440841426,"duration":169},"status":"failed","statusMessage":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd4a90f4d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd4a8f78a90>, 'council': 'BarnetCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BarnetCouncil.CouncilClass object at 0x7fd4a9450c10>, page = ''\nkwargs = {'headless': True, 'paon': 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', 'postcode': 'HA8 7NA', 'uprn': None, ...}\ndriver = None, user_postcode = 'HA8 7NA'\nuser_paon = 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', headless = True\nweb_driver = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            user_postcode = kwargs.get(\"postcode\")\n            if not user_postcode:\n                raise ValueError(\"No postcode provided.\")\n            check_postcode(user_postcode)\n    \n            user_paon = kwargs.get(\"paon\")\n            check_paon(user_paon)\n            headless = kwargs.get(\"headless\")\n            web_driver = kwargs.get(\"web_driver\")\n>           driver = create_webdriver(web_driver, headless)\nE           TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:77: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"fixturefunc = <function scrape_step at 0x7fd4a90f4d60>\nrequest = <FixtureRequest for <Function test_scenario_outline[BarnetCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fd4a8f78a90>, 'council': 'BarnetCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <BarnetCouncil.CouncilClass object at 0x7fd4a9450c10>, page = ''\nkwargs = {'headless': True, 'paon': 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', 'postcode': 'HA8 7NA', 'uprn': None, ...}\ndriver = None, user_postcode = 'HA8 7NA'\nuser_paon = 'HA8 7NA, 2, MANOR PARK GARDENS, EDGWARE, BARNET', headless = True\nweb_driver = None\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            user_postcode = kwargs.get(\"postcode\")\n            if not user_postcode:\n                raise ValueError(\"No postcode provided.\")\n            check_postcode(user_postcode)\n    \n            user_paon = kwargs.get(\"paon\")\n            check_paon(user_paon)\n            headless = kwargs.get(\"headless\")\n            web_driver = kwargs.get(\"web_driver\")\n>           driver = create_webdriver(web_driver, headless)\nE           TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n\nuk_bin_collection/uk_bin_collection/councils/BarnetCouncil.py:77: TypeError","steps":[{"name":"Given the council: BarnetCouncil","time":{"start":1707440841257,"stop":1707440841257,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from BarnetCouncil using local and the http://selenium:4444 is set","time":{"start":1707440841257,"stop":1707440841426,"duration":169},"status":"failed","statusMessage":"create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az523-512"},{"name":"thread","value":"2713-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"BarnetCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":29,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":29},"items":[{"uid":"3cfb6d58bcdbf23a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/29//#testresult/3cfb6d58bcdbf23a","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707354434050,"stop":1707354434204,"duration":154}},{"uid":"2ee4c7b3453ebb16","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/28//#testresult/2ee4c7b3453ebb16","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707267987789,"stop":1707267988388,"duration":599}},{"uid":"f04d3b96c27cf2ce","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/27//#testresult/f04d3b96c27cf2ce","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707181697370,"stop":1707181697568,"duration":198}},{"uid":"8102e6348250012a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/26//#testresult/8102e6348250012a","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707095417540,"stop":1707095417696,"duration":156}},{"uid":"163d716a8976ca78","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/25//#testresult/163d716a8976ca78","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707009181002,"stop":1707009181053,"duration":51}},{"uid":"65ce0b52934cfd4e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/24//#testresult/65ce0b52934cfd4e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706922422073,"stop":1706922422222,"duration":149}},{"uid":"9d71255d3d14ee9a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/23//#testresult/9d71255d3d14ee9a","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706836104175,"stop":1706836104228,"duration":53}},{"uid":"15c33abb077c2104","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/22//#testresult/15c33abb077c2104","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706749928109,"stop":1706749928249,"duration":140}},{"uid":"3f9341dcb99089d4","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/21//#testresult/3f9341dcb99089d4","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706663317428,"stop":1706663318031,"duration":603}},{"uid":"5e128c4d0d0f3282","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/20//#testresult/5e128c4d0d0f3282","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706576988559,"stop":1706576988625,"duration":66}},{"uid":"c074b647cd3c951e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/19//#testresult/c074b647cd3c951e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706490528763,"stop":1706490528936,"duration":173}},{"uid":"6c45704d232f6dc7","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/18//#testresult/6c45704d232f6dc7","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706404391270,"stop":1706404391339,"duration":69}},{"uid":"d3297466c40ecd","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/17//#testresult/d3297466c40ecd","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706317649030,"stop":1706317649096,"duration":66}},{"uid":"4f30336834cb34ca","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/16//#testresult/4f30336834cb34ca","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706231392132,"stop":1706231392296,"duration":164}},{"uid":"7cf563b3c9fd3a20","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/15//#testresult/7cf563b3c9fd3a20","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706145330958,"stop":1706145331178,"duration":220}},{"uid":"820cec68c27194de","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/14//#testresult/820cec68c27194de","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706058910358,"stop":1706058910768,"duration":410}},{"uid":"296a87100bda4530","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/13//#testresult/296a87100bda4530","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705972553286,"stop":1705972553507,"duration":221}},{"uid":"79ca29138c0ffb8","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/12//#testresult/79ca29138c0ffb8","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705886222587,"stop":1705886222751,"duration":164}},{"uid":"932b2ceafec7218f","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/11//#testresult/932b2ceafec7218f","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705799963296,"stop":1705799963464,"duration":168}},{"uid":"795326e09041c7f1","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/10//#testresult/795326e09041c7f1","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705713186182,"stop":1705713186249,"duration":67}}]},"tags":[]},"source":"51c1f2212905b8d0.json","parameterValues":["BarnetCouncil","local","http://selenium:4444"]}