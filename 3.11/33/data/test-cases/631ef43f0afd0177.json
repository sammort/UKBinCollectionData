{"uid":"631ef43f0afd0177","name":"Validate Council Output [MaldonDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"d7ae259690887cdb3dd06225c666392f","time":{"start":1707700130995,"stop":1707700174760,"duration":43765},"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f9bfee5c720>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9bfe45e9d0>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f9c1253a510>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","flaky":true,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"ValueError: No bin data found for provided UPRN.","statusTrace":"fixturefunc = <function scrape_step at 0x7f9bfee5c720>\nrequest = <FixtureRequest for <Function test_scenario_outline[MaldonDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f9bfe45e9d0>, 'council': 'MaldonDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MaldonDistrictCouncil.CouncilClass object at 0x7f9c1253a510>, page = ''\nkwargs = {'headless': True, 'paon': None, 'postcode': None, 'uprn': '100090557253', ...}\ndata = {'bins': []}, uprn = '100090557253', response = <Response [500]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        data = {\"bins\": []}\n        uprn = kwargs.get(\"uprn\")\n        check_uprn(uprn)\n    \n        requests.packages.urllib3.disable_warnings()\n        response = requests.get(\n            f\"https://maldon.suez.co.uk/maldon/ServiceSummary?uprn={uprn}\",\n            headers={\"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64)\"},\n        )\n        if response.status_code != 200:\n>           raise ValueError(\"No bin data found for provided UPRN.\")\nE           ValueError: No bin data found for provided UPRN.\n\nuk_bin_collection/uk_bin_collection/councils/MaldonDistrictCouncil.py:25: ValueError","steps":[{"name":"Given the council: MaldonDistrictCouncil","time":{"start":1707700130995,"stop":1707700130996,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MaldonDistrictCouncil using None and the None is set","time":{"start":1707700130996,"stop":1707700174760,"duration":43764},"status":"failed","statusMessage":"No bin data found for provided UPRN.","statusTrace":"ValueError: No bin data found for provided UPRN.\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1210-422"},{"name":"thread","value":"2809-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MaldonDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":0,"skipped":0,"passed":30,"unknown":0,"total":32},"items":[{"uid":"755917ba72d7863c","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/32//#testresult/755917ba72d7863c","status":"passed","time":{"start":1707614014498,"stop":1707614015772,"duration":1274}},{"uid":"460422d6aa69c793","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/31//#testresult/460422d6aa69c793","status":"failed","statusDetails":"ValueError: No bin data found for provided UPRN.","time":{"start":1707527211301,"stop":1707527247812,"duration":36511}},{"uid":"2e95df7829bfa859","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/30//#testresult/2e95df7829bfa859","status":"passed","time":{"start":1707440858843,"stop":1707440860153,"duration":1310}},{"uid":"856ed2a1c554d866","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/29//#testresult/856ed2a1c554d866","status":"passed","time":{"start":1707354456065,"stop":1707354457292,"duration":1227}},{"uid":"aae8cdc72c31aa82","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/28//#testresult/aae8cdc72c31aa82","status":"passed","time":{"start":1707268011755,"stop":1707268012972,"duration":1217}},{"uid":"5fcc34b1771fcc5d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/27//#testresult/5fcc34b1771fcc5d","status":"passed","time":{"start":1707181719450,"stop":1707181721345,"duration":1895}},{"uid":"4039a5d1fc299699","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/26//#testresult/4039a5d1fc299699","status":"passed","time":{"start":1707095438351,"stop":1707095439408,"duration":1057}},{"uid":"ce6da3b46b34434a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/25//#testresult/ce6da3b46b34434a","status":"passed","time":{"start":1707009207496,"stop":1707009209019,"duration":1523}},{"uid":"435948a357295ab1","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/24//#testresult/435948a357295ab1","status":"passed","time":{"start":1706922472339,"stop":1706922486898,"duration":14559}},{"uid":"c04e28ebc87e47da","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/23//#testresult/c04e28ebc87e47da","status":"passed","time":{"start":1706836124384,"stop":1706836125495,"duration":1111}},{"uid":"d29735b2c80c2b79","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/22//#testresult/d29735b2c80c2b79","status":"passed","time":{"start":1706749947695,"stop":1706749948818,"duration":1123}},{"uid":"d910c58336a79140","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/21//#testresult/d910c58336a79140","status":"passed","time":{"start":1706663336017,"stop":1706663337261,"duration":1244}},{"uid":"3c08b2531f7d6ba","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/20//#testresult/3c08b2531f7d6ba","status":"passed","time":{"start":1706576926216,"stop":1706576927796,"duration":1580}},{"uid":"404bd097f24d978f","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/19//#testresult/404bd097f24d978f","status":"passed","time":{"start":1706490546817,"stop":1706490548163,"duration":1346}},{"uid":"5896d9999a1833e6","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/18//#testresult/5896d9999a1833e6","status":"passed","time":{"start":1706404411284,"stop":1706404412351,"duration":1067}},{"uid":"64ec3ce54611ce70","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/17//#testresult/64ec3ce54611ce70","status":"passed","time":{"start":1706317669959,"stop":1706317671216,"duration":1257}},{"uid":"869bb607fff8aae0","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/16//#testresult/869bb607fff8aae0","status":"passed","time":{"start":1706231415389,"stop":1706231416522,"duration":1133}},{"uid":"ce742e1a309538af","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/15//#testresult/ce742e1a309538af","status":"passed","time":{"start":1706145354112,"stop":1706145355501,"duration":1389}},{"uid":"1300a64803fe3f2a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/14//#testresult/1300a64803fe3f2a","status":"passed","time":{"start":1706058927967,"stop":1706058929078,"duration":1111}},{"uid":"782c4f66b9fdc001","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/13//#testresult/782c4f66b9fdc001","status":"passed","time":{"start":1705972573927,"stop":1705972575271,"duration":1344}}]},"tags":[]},"source":"631ef43f0afd0177.json","parameterValues":["MaldonDistrictCouncil","None","None"]}