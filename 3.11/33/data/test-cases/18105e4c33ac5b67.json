{"uid":"18105e4c33ac5b67","name":"Validate Council Output [MidSussexDistrictCouncil-None-None]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"603913cb01d56f40fcd70fa6d1ec6273","time":{"start":1707700128610,"stop":1707700129300,"duration":690},"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7fa88896cd60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa888015d10>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7fa8880171d0>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","statusTrace":"fixturefunc = <function scrape_step at 0x7fa88896cd60>\nrequest = <FixtureRequest for <Function test_scenario_outline[MidSussexDistrictCouncil-None-None]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7fa888015d10>, 'council': 'MidSussexDistrictCouncil', 'selenium_mode': 'None', 'selenium_url': 'None'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MidSussexDistrictCouncil.CouncilClass object at 0x7fa8880171d0>\npage = ''\nkwargs = {'headless': True, 'paon': 'OAKLANDS', 'postcode': 'RH16 1SS', 'uprn': None, ...}\napi_url = 'https://www.midsussex.gov.uk/waste-recycling/bin-collection/'\nuser_postcode = 'RH16 1SS', user_paon = 'OAKLANDS'\npostcode_re = '^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$'\nuser_full_addr = 'OAKLANDS RH16 1SS'\nform_data = {'AddressStep.strAddressSelect': 'OAKLANDS RH16 1SS', 'Next': 'true', 'PostCodeStep.strAddressSearch': 'RH16 1SS', 'StepIndex': '1', ...}\ninit = <Response [200]>\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        api_url = \"https://www.midsussex.gov.uk/waste-recycling/bin-collection/\"\n        user_postcode = kwargs.get(\"postcode\")\n        user_paon = kwargs.get(\"paon\")\n        postcode_re = \"^([A-Za-z][A-Ha-hJ-Yj-y]?[0-9][A-Za-z0-9]? ?[0-9][A-Za-z]{2}|[Gg][Ii][Rr] ?0[Aa]{2})$\"\n        user_full_addr = f\"{user_paon} {user_postcode}\"\n    \n        check_postcode(user_postcode)\n        check_paon(user_paon)\n    \n        form_data = {\n            \"PostCodeStep.strAddressSearch\": user_postcode,\n            \"AddressStep.strAddressSelect\": user_full_addr,\n            \"Next\": \"true\",\n            \"StepIndex\": \"1\",\n        }\n    \n        # Get a ufprt by posting here (I have no idea how ufprt works, so may as well grab one from the server)\n        requests.packages.urllib3.disable_warnings()\n        init = requests.post(api_url, data=form_data)\n        ufprt = get_token(init.text)\n        form_data.update({\"ufprt\": ufprt})\n    \n        response = requests.post(api_url, data=form_data)\n    \n        # Make a BS4 object\n        soup = BeautifulSoup(response.text, features=\"html.parser\")\n        soup.prettify()\n    \n        data = {\"bins\": []}\n    \n        table_element = soup.find(\"table\", {\"class\": \"collDates\"})\n>       table_rows = table_element.find_all_next(\"tr\")\nE       AttributeError: 'NoneType' object has no attribute 'find_all_next'\n\nuk_bin_collection/uk_bin_collection/councils/MidSussexDistrictCouncil.py:62: AttributeError","steps":[{"name":"Given the council: MidSussexDistrictCouncil","time":{"start":1707700128610,"stop":1707700128611,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from MidSussexDistrictCouncil using None and the None is set","time":{"start":1707700128611,"stop":1707700129300,"duration":689},"status":"failed","statusMessage":"'NoneType' object has no attribute 'find_all_next'","statusTrace":"AttributeError: 'NoneType' object has no attribute 'find_all_next'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1210-422"},{"name":"thread","value":"2806-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"MidSussexDistrictCouncil"},{"name":"selenium_mode","value":"None"},{"name":"selenium_url","value":"None"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":32,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":32},"items":[{"uid":"c1e0c26ee1c9ecbb","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/32//#testresult/c1e0c26ee1c9ecbb","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1707614011389,"stop":1707614012300,"duration":911}},{"uid":"86a1a37b13b5e089","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/31//#testresult/86a1a37b13b5e089","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1707527180372,"stop":1707527181344,"duration":972}},{"uid":"4269cd66d9336d20","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/30//#testresult/4269cd66d9336d20","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1707440859244,"stop":1707440860517,"duration":1273}},{"uid":"261c90af57aa98ae","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/29//#testresult/261c90af57aa98ae","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1707354462437,"stop":1707354464442,"duration":2005}},{"uid":"5c1fe5cdbf93be48","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/28//#testresult/5c1fe5cdbf93be48","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1707268006256,"stop":1707268007067,"duration":811}},{"uid":"c7e9c1703274fd45","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/27//#testresult/c7e9c1703274fd45","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1707181715347,"stop":1707181717097,"duration":1750}},{"uid":"833fd5597bfc30e7","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/26//#testresult/833fd5597bfc30e7","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1707095435632,"stop":1707095436618,"duration":986}},{"uid":"fb2f65a29d923338","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/25//#testresult/fb2f65a29d923338","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1707009215029,"stop":1707009215915,"duration":886}},{"uid":"e8b98604b9c9f393","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/24//#testresult/e8b98604b9c9f393","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706922442575,"stop":1706922443752,"duration":1177}},{"uid":"dad027c4194a4f41","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/23//#testresult/dad027c4194a4f41","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706836116867,"stop":1706836117508,"duration":641}},{"uid":"58ee201a6c40ae53","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/22//#testresult/58ee201a6c40ae53","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706749947047,"stop":1706749947942,"duration":895}},{"uid":"23caa549e44922a1","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/21//#testresult/23caa549e44922a1","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706663335492,"stop":1706663336234,"duration":742}},{"uid":"6123a75cccd2c7c5","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/20//#testresult/6123a75cccd2c7c5","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706576938408,"stop":1706576939365,"duration":957}},{"uid":"c840a5b5d978f1f3","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/19//#testresult/c840a5b5d978f1f3","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706490554145,"stop":1706490555154,"duration":1009}},{"uid":"209728552bef01b0","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/18//#testresult/209728552bef01b0","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706404418129,"stop":1706404419206,"duration":1077}},{"uid":"33aa06afa50df01b","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/17//#testresult/33aa06afa50df01b","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706317667547,"stop":1706317668354,"duration":807}},{"uid":"e2f962fe48ec7dfd","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/16//#testresult/e2f962fe48ec7dfd","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706231405044,"stop":1706231406400,"duration":1356}},{"uid":"777971181a8f0a63","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/15//#testresult/777971181a8f0a63","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706145348802,"stop":1706145349970,"duration":1168}},{"uid":"cda0409b12026542","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/14//#testresult/cda0409b12026542","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1706058927459,"stop":1706058928531,"duration":1072}},{"uid":"ebe22a1f76f87a38","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/13//#testresult/ebe22a1f76f87a38","status":"failed","statusDetails":"AttributeError: 'NoneType' object has no attribute 'find_all_next'","time":{"start":1705972621565,"stop":1705972622612,"duration":1047}}]},"tags":[]},"source":"18105e4c33ac5b67.json","parameterValues":["MidSussexDistrictCouncil","None","None"]}