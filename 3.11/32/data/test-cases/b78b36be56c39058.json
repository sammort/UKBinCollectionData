{"uid":"b78b36be56c39058","name":"Validate Council Output [EastLindseyDistrictCouncil-http://selenium:4444-local]","fullName":"features/validate_council_outputs.feature:Validate Council Output","historyId":"eb374edb17b4c377c221232fbb03cdfe","time":{"start":1707614004988,"stop":1707614005180,"duration":192},"status":"failed","statusMessage":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"fixturefunc = <function scrape_step at 0x7f266b8507c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f266b589a10>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7f266b6e9450>\npage = ''\nkwargs = {'headless': True, 'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, ...}\ndriver = None, data = {'bins': []}, user_paon = 'Raf Coningsby'\nuser_postcode = 'LN4 4SY', web_driver = None, headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            # Create Selenium webdriver\n>           driver = create_webdriver(web_driver, headless)\nE           TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:30: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"fixturefunc = <function scrape_step at 0x7f266b8507c0>\nrequest = <FixtureRequest for <Function test_scenario_outline[EastLindseyDistrictCouncil-http://selenium:4444-local]>>\nkwargs = {'context': <test_validate_council.context.<locals>.Context object at 0x7f266b589a10>, 'council': 'EastLindseyDistrictCouncil', 'selenium_mode': 'local', 'selenium_url': 'http://selenium:4444'}\n\n    def call_fixture_func(\n        fixturefunc: \"_FixtureFunc[FixtureValue]\", request: FixtureRequest, kwargs\n    ) -> FixtureValue:\n        if is_generator(fixturefunc):\n            fixturefunc = cast(\n                Callable[..., Generator[FixtureValue, None, None]], fixturefunc\n            )\n            generator = fixturefunc(**kwargs)\n            try:\n                fixture_result = next(generator)\n            except StopIteration:\n                raise ValueError(f\"{request.fixturename} did not yield a value\") from None\n            finalizer = functools.partial(_teardown_yield_fixture, fixturefunc, generator)\n            request.addfinalizer(finalizer)\n        else:\n            fixturefunc = cast(Callable[..., FixtureValue], fixturefunc)\n>           fixture_result = fixturefunc(**kwargs)\n\n../../../.cache/pypoetry/virtualenvs/uk-bin-collection-EwS6Gn8s-py3.11/lib/python3.11/site-packages/_pytest/fixtures.py:902: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nuk_bin_collection/tests/step_defs/test_validate_council.py:92: in scrape_step\n    context.parse_result = CollectData.run()\nuk_bin_collection/uk_bin_collection/collect_data.py:96: in run\n    return self.client_code(\nuk_bin_collection/uk_bin_collection/collect_data.py:115: in client_code\n    return get_bin_data_class.template_method(address_url, **kwargs)\nuk_bin_collection/uk_bin_collection/get_bin_data.py:78: in template_method\n    bin_data_dict = self.parse_data(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <EastLindseyDistrictCouncil.CouncilClass object at 0x7f266b6e9450>\npage = ''\nkwargs = {'headless': True, 'paon': 'Raf Coningsby', 'postcode': 'LN4 4SY', 'uprn': None, ...}\ndriver = None, data = {'bins': []}, user_paon = 'Raf Coningsby'\nuser_postcode = 'LN4 4SY', web_driver = None, headless = True\n\n    def parse_data(self, page: str, **kwargs) -> dict:\n        driver = None\n        try:\n            data = {\"bins\": []}\n            user_paon = kwargs.get(\"paon\")\n            user_postcode = kwargs.get(\"postcode\")\n            web_driver = kwargs.get(\"web_driver\")\n            headless = kwargs.get(\"headless\")\n            check_paon(user_paon)\n            check_postcode(user_postcode)\n    \n            # Create Selenium webdriver\n>           driver = create_webdriver(web_driver, headless)\nE           TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n\nuk_bin_collection/uk_bin_collection/councils/EastLindseyDistrictCouncil.py:30: TypeError","steps":[{"name":"Given the council: EastLindseyDistrictCouncil","time":{"start":1707614004989,"stop":1707614004989,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false},{"name":"When we scrape the data from EastLindseyDistrictCouncil using local and the http://selenium:4444 is set","time":{"start":1707614004989,"stop":1707614005180,"duration":191},"status":"failed","statusMessage":"create_webdriver() missing 1 required positional argument: 'user_agent'","statusTrace":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":2,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"host","value":"fv-az1245-107"},{"name":"thread","value":"2752-MainThread"},{"name":"framework","value":"pytest-bdd"},{"name":"language","value":"cpython3"},{"name":"feature","value":"Test each council output matches expected results"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"council","value":"EastLindseyDistrictCouncil"},{"name":"selenium_mode","value":"local"},{"name":"selenium_url","value":"http://selenium:4444"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":31,"broken":0,"skipped":0,"passed":0,"unknown":0,"total":31},"items":[{"uid":"b834899dca832af9","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/31//#testresult/b834899dca832af9","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707527172865,"stop":1707527172926,"duration":61}},{"uid":"b21a4193ac562ab9","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/30//#testresult/b21a4193ac562ab9","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707440848202,"stop":1707440848391,"duration":189}},{"uid":"2f42c631de00a0c","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/29//#testresult/2f42c631de00a0c","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707354438500,"stop":1707354438656,"duration":156}},{"uid":"b2b199ef39d7fe33","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/28//#testresult/b2b199ef39d7fe33","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707268001855,"stop":1707268002041,"duration":186}},{"uid":"3d7297581d43a7e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/27//#testresult/3d7297581d43a7e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707181709481,"stop":1707181709676,"duration":195}},{"uid":"ebe74b86c8a1a1c1","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/26//#testresult/ebe74b86c8a1a1c1","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707095428650,"stop":1707095429076,"duration":426}},{"uid":"3b364de83d143fb6","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/25//#testresult/3b364de83d143fb6","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1707009241476,"stop":1707009241671,"duration":195}},{"uid":"2632c4e6c32f34d8","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/24//#testresult/2632c4e6c32f34d8","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706922430037,"stop":1706922430096,"duration":59}},{"uid":"a360b3277319b169","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/23//#testresult/a360b3277319b169","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706836112837,"stop":1706836112883,"duration":46}},{"uid":"1f2d39ae6e36121d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/22//#testresult/1f2d39ae6e36121d","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706749941342,"stop":1706749941478,"duration":136}},{"uid":"cbac11f6c92eff0e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/21//#testresult/cbac11f6c92eff0e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706663329811,"stop":1706663330008,"duration":197}},{"uid":"43048e7b977bd9cf","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/20//#testresult/43048e7b977bd9cf","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706576913377,"stop":1706576913582,"duration":205}},{"uid":"23cf9d219256dd5d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/19//#testresult/23cf9d219256dd5d","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706490541594,"stop":1706490541738,"duration":144}},{"uid":"6c4f910ee6e9f8b5","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/18//#testresult/6c4f910ee6e9f8b5","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706404398504,"stop":1706404398564,"duration":60}},{"uid":"a2a67ca5ca2b5fbd","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/17//#testresult/a2a67ca5ca2b5fbd","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706317658842,"stop":1706317658910,"duration":68}},{"uid":"54f57893b0d5f44e","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/16//#testresult/54f57893b0d5f44e","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706231403518,"stop":1706231403670,"duration":152}},{"uid":"ded7f4979161a9bb","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/15//#testresult/ded7f4979161a9bb","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706145341858,"stop":1706145342497,"duration":639}},{"uid":"78d474b3755cd65d","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/14//#testresult/78d474b3755cd65d","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1706058919600,"stop":1706058919670,"duration":70}},{"uid":"f6cd62ec3a54bb8a","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/13//#testresult/f6cd62ec3a54bb8a","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705972570204,"stop":1705972570432,"duration":228}},{"uid":"a76bd64ebde8e717","reportUrl":"https://sammort.github.io/UKBinCollectionData/3.11/12//#testresult/a76bd64ebde8e717","status":"failed","statusDetails":"TypeError: create_webdriver() missing 1 required positional argument: 'user_agent'","time":{"start":1705886232806,"stop":1705886232865,"duration":59}}]},"tags":[]},"source":"b78b36be56c39058.json","parameterValues":["EastLindseyDistrictCouncil","local","http://selenium:4444"]}